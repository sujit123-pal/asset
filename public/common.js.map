{"version":3,"sources":["./src/app/data/api.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAIb;AACwB;AACpB;AACyB;;;AAyBpD,MAAM,UAAU;IACrB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,WAAW,CAAC,WAAmB,EAAE,EAAE,cAAsB,CAAC,EAAE,SAAiB,EAAE,EAAE,UAAkB,EAAE;QACnG,MAAM,GAAG,GAAG,wEAAW,CAAC,MAAM,GAAG,eAAe,CAAC;QACjD,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,GAAG,EAAE,CAAC,CAAC;QAClD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,WAAW,GAAG,EAAE,CAAC,CAAC;QACxD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QACzC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAE3C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,CAAC;aAClC,IAAI,CACH,0DAAG,CAAC,CAAC,GAAqB,EAAE,EAAE;YAC5B,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,EACF,iEAAU,CAAC,QAAQ,CAAC,EAAE;YACpB,OAAO,uDAAU,CAAC,QAAQ,CAAC,CAAC;QAC9B,CAAC,CAAC,CACH,CAAC;IACN,CAAC;;oEApBU,UAAU;6FAAV,UAAU,WAAV,UAAU,mBADG,MAAM;6FACnB,UAAU;cADtB,wDAAU;eAAC,EAAE,UAAU,EAAE,MAAM,EAAE","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpParams\r\n} from '@angular/common/http';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nexport interface IProduct {\r\n  id: number;\r\n  title: string;\r\n  img: string;\r\n  category: string;\r\n  status: string;\r\n  statusColor: string;\r\n  description: string;\r\n  sales: number;\r\n  stock: number;\r\n  date: string;\r\n}\r\n\r\nexport interface IProductResponse {\r\n  data: IProduct[];\r\n  status: boolean;\r\n  totalItem: number;\r\n  totalPage: number;\r\n  pageSize: string;\r\n  currentPage: string;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ApiService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getProducts(pageSize: number = 10, currentPage: number = 1, search: string = '', orderBy: string = '') {\r\n    const url = environment.apiUrl + '/cakes/paging';\r\n    let params = new HttpParams();\r\n    params = params.append('pageSize', pageSize + '');\r\n    params = params.append('currentPage', currentPage + '');\r\n    params = params.append('search', search);\r\n    params = params.append('orderBy', orderBy);\r\n\r\n    return this.http.get(url, { params })\r\n      .pipe(\r\n        map((res: IProductResponse) => {\r\n          return res;\r\n        }),\r\n        catchError(errorRes => {\r\n          return throwError(errorRes);\r\n        })\r\n      );\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}